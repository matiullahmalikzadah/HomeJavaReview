When we should use Array are the useless now?
   Array are note useless Even the ArrayList is biult using the array under the hood.
   1) Array are fast and very space efficient when we know the size of something in advance we should
   prefer arrays.
Wrapper Classes:
   Wrapper Classes are object types.for every primitive data type we have a wrapper type.
Why should we use wrapper classes?
   1) which can be tread as we treat as we treat objects. we can call methods which is not possible
   with primitive.
   2) Collections framework only works with classes which means we can not use primitive.
ArrayList:
   The data is store in consecutive (side to side) memory location. meaning accessing this data
   will be easir how ever if we have to add something in-between later one we must shift the data.
Note:
   if we have sure no change in our elements (value) that time wi should use ArrayList. because if
   we want to change then after changer elements will mover the location like:
   1,2,3,4,5,6,7,8, if this number we want to add a number or delete a number inside of these number then
   after changing the number move the location like:
   1,2,3,0,5,6,7,8,  if we want to delete number 6 like: 1,2,3,4,5,7,8.
LikedList:
   Data is not stored in consecutive memory location meaning its going to be hard and slow to find and
   access the data as we must go through all the element which are present before it.
   But adding and removing elements from in-between will be super as we just need to re-adjust the links.

Interview Questions?
   90% the questions are retrieving the stored data and 10% are adding or removing the elements which
   data structure we should use ArrayList or LikedList?
   ArrayList as it is much faster and easier to retrieve it.
Sets:
   Set is a interface in collection framework. there are three main classes which implement this interface
   they are called 1)HashSets 2)LinkedHashSets 3) TreeSets. One thing is common in all of the classes
   they don't allow to store duplicate data.
HashSets:
    Upside: it is fast than batch17.
    downside: it does maintain the insert order.

LinkedHashSet:
   Upside: Maintains the insertion order.
   downSide: it is slow than HashSets.


